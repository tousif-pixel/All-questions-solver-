// All Question Solver - Complete React Native Code

import React, { useState } from 'react'; import { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native'; import { NavigationContainer } from '@react-navigation/native'; import { createStackNavigator } from '@react-navigation/stack'; import * as ImagePicker from 'expo-image-picker'; import { GestureHandlerRootView } from 'react-native-gesture-handler';

const Stack = createStackNavigator();

// Home Screen const HomeScreen = ({ navigation }) => { return ( <View style={styles.container}> <Text style={styles.title}>All Question Solver</Text> <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('QuestionInput')}> <Text style={styles.buttonText}>Enter Question</Text> </TouchableOpacity> <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('CameraScan')}> <Text style={styles.buttonText}>Scan Question</Text> </TouchableOpacity> </View> ); };

// Question Input Screen const QuestionInputScreen = ({ navigation }) => { const [question, setQuestion] = useState('');

const getAnswer = () => { navigation.navigate('Result', { answer: AI Answer for: ${question} }); };

return ( <View style={styles.container}> <TextInput
style={styles.input}
placeholder="Enter your question"
onChangeText={setQuestion}
/> <TouchableOpacity style={styles.button} onPress={getAnswer}> <Text style={styles.buttonText}>Get Answer</Text> </TouchableOpacity> </View> ); };

// Camera Scan Screen const CameraScanScreen = ({ navigation }) => { const pickImage = async () => { let result = await ImagePicker.launchCameraAsync({ base64: true, }); if (!result.canceled) { navigation.navigate('Result', { answer: 'Recognized Question Answer' }); } };

return ( <View style={styles.container}> <TouchableOpacity style={styles.button} onPress={pickImage}> <Text style={styles.buttonText}>Scan with Camera</Text> </TouchableOpacity> </View> ); };

// Result Screen const ResultScreen = ({ route }) => { return ( <View style={styles.container}> <Text style={styles.resultText}>{route.params?.answer}</Text> </View> ); };

// App Component export default function App() { return ( <GestureHandlerRootView style={{ flex: 1 }}> <NavigationContainer> <Stack.Navigator screenOptions={{ headerShown: false }}> <Stack.Screen name="Home" component={HomeScreen} /> <Stack.Screen name="QuestionInput" component={QuestionInputScreen} /> <Stack.Screen name="CameraScan" component={CameraScanScreen} /> <Stack.Screen name="Result" component={ResultScreen} /> </Stack.Navigator> </NavigationContainer> </GestureHandlerRootView> ); }

// Styles const styles = StyleSheet.create({ container: { flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#f0f0f0', }, title: { fontSize: 24, fontWeight: 'bold', marginBottom: 20, }, button: { backgroundColor: '#007bff', padding: 15, borderRadius: 10, marginBottom: 10, }, buttonText: { color: 'white', fontSize: 18, }, input: { width: '80%', padding: 10, borderColor: '#ccc', borderWidth: 1, marginBottom: 10, borderRadius: 5, backgroundColor: 'white', }, resultText: { fontSize: 20, textAlign: 'center', padding: 20, }, });
// All Question Solver - Complete React Native Code

import React, { useState } from 'react'; import { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native'; import { NavigationContainer } from '@react-navigation/native'; import { createStackNavigator } from '@react-navigation/stack'; import * as ImagePicker from 'expo-image-picker'; import { GestureHandlerRootView } from 'react-native-gesture-handler';

const Stack = createStackNavigator();

// Home Screen const HomeScreen = ({ navigation }) => { return ( <View style={styles.container}> <Text style={styles.title}>All Question Solver</Text> <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('QuestionInput')}> <Text style={styles.buttonText}>Enter Question</Text> </TouchableOpacity> <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('CameraScan')}> <Text style={styles.buttonText}>Scan Question</Text> </TouchableOpacity> </View> ); };

// Question Input Screen const QuestionInputScreen = ({ navigation }) => { const [question, setQuestion] = useState('');

const getAnswer = () => { navigation.navigate('Result', { answer: AI Answer for: ${question} }); };

return ( <View style={styles.container}> <TextInput
style={styles.input}
placeholder="Enter your question"
onChangeText={setQuestion}
/> <TouchableOpacity style={styles.button} onPress={getAnswer}> <Text style={styles.buttonText}>Get Answer</Text> </TouchableOpacity> </View> ); };

// Camera Scan Screen const CameraScanScreen = ({ navigation }) => { const pickImage = async () => { let result = await ImagePicker.launchCameraAsync({ base64: true, }); if (!result.canceled) { navigation.navigate('Result', { answer: 'Recognized Question Answer' }); } };

return ( <View style={styles.container}> <TouchableOpacity style={styles.button} onPress={pickImage}> <Text style={styles.buttonText}>Scan with Camera</Text> </TouchableOpacity> </View> ); };

// Result Screen const ResultScreen = ({ route }) => { return ( <View style={styles.container}> <Text style={styles.resultText}>{route.params?.answer}</Text> </View> ); };

// App Component export default function App() { return ( <GestureHandlerRootView style={{ flex: 1 }}> <NavigationContainer> <Stack.Navigator screenOptions={{ headerShown: false }}> <Stack.Screen name="Home" component={HomeScreen} /> <Stack.Screen name="QuestionInput" component={QuestionInputScreen} /> <Stack.Screen name="CameraScan" component={CameraScanScreen} /> <Stack.Screen name="Result" component={ResultScreen} /> </Stack.Navigator> </NavigationContainer> </GestureHandlerRootView> ); }

// Styles const styles = StyleSheet.create({ container: { flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#f0f0f0', }, title: { fontSize: 24, fontWeight: 'bold', marginBottom: 20, }, button: { backgroundColor: '#007bff', padding: 15, borderRadius: 10, marginBottom: 10, }, buttonText: { color: 'white', fontSize: 18, }, input: { width: '80%', padding: 10, borderColor: '#ccc', borderWidth: 1, marginBottom: 10, borderRadius: 5, backgroundColor: 'white', }, resultText: { fontSize: 20, textAlign: 'center', padding: 20, }, });

